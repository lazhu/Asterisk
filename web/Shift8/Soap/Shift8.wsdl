<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://10.1.1.144/soap/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap-enc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" name="Shift8" targetNamespace="http://10.1.1.144/soap/"><types><xsd:schema targetNamespace="http://10.1.1.144/soap/"><xsd:complexType name="Shift8_Event_Listener"><xsd:all/></xsd:complexType><xsd:complexType name="Shift8_Event_Filter"><xsd:all/></xsd:complexType><xsd:complexType name="Shift8_Debug_Listener"><xsd:all/></xsd:complexType><xsd:complexType name="Shift8_Event"><xsd:all/></xsd:complexType><xsd:complexType name="ArrayOfShift8_event"><xsd:sequence><xsd:element name="item" type="tns:Shift8_Event" minOccurs="0" maxOccurs="unbounded"/></xsd:sequence></xsd:complexType><xsd:complexType name="Shift8_Queue_Processor"><xsd:all/></xsd:complexType><xsd:complexType name="SimpleXMLElement"><xsd:all/></xsd:complexType></xsd:schema></types><portType name="Shift8Port"><operation name="addEventListener"><documentation>Adds a new event listener to the library. The listener is defined by the name specified. If the name passed
already exists on the system, the listener will not be added.</documentation><input message="tns:addEventListenerIn"/><output message="tns:addEventListenerOut"/></operation><operation name="removeEventListener"><documentation>Removes an event listener from the library.</documentation><input message="tns:removeEventListenerIn"/><output message="tns:removeEventListenerOut"/></operation><operation name="addDebugListener"><documentation>Adds a debug listener.</documentation><input message="tns:addDebugListenerIn"/><output message="tns:addDebugListenerOut"/></operation><operation name="removeDebugListener"><documentation>Removes a debug listener</documentation><input message="tns:removeDebugListenerIn"/><output message="tns:removeDebugListenerOut"/></operation><operation name="addCommandToQueue"><documentation>Adds a new command to the queue of commands to be executed on the remote asterisk server.</documentation><input message="tns:addCommandToQueueIn"/><output message="tns:addCommandToQueueOut"/></operation><operation name="processCommandQueue"><documentation>Processes the commands actively in the Shift8 queue</documentation><input message="tns:processCommandQueueIn"/><output message="tns:processCommandQueueOut"/></operation><operation name="getQueuedCommandResponse"><documentation>Retrieve the result from a queued command</documentation><input message="tns:getQueuedCommandResponseIn"/><output message="tns:getQueuedCommandResponseOut"/></operation><operation name="setQueueProcessor"><documentation>Set the active queue processor. 
The processor is responsible for inserting, retrieving and updating the Shift8 Command Queue.</documentation><input message="tns:setQueueProcessorIn"/></operation><operation name="getQueueProcessor"><documentation>Returns the active queue processor.</documentation><input message="tns:getQueueProcessorIn"/><output message="tns:getQueueProcessorOut"/></operation><operation name="disallowCommandToBeQueued"><documentation>Disallow a command from being queued</documentation><input message="tns:disallowCommandToBeQueuedIn"/><output message="tns:disallowCommandToBeQueuedOut"/></operation><operation name="allowCommandToBeQueued"><documentation>Allow command to be queued.</documentation><input message="tns:allowCommandToBeQueuedIn"/><output message="tns:allowCommandToBeQueuedOut"/></operation><operation name="queueAddInterface"><documentation>Adds a new interface in the Queue</documentation><input message="tns:queueAddInterfaceIn"/><output message="tns:queueAddInterfaceOut"/></operation><operation name="queueRemoveInterface"><documentation>Remove an interface from the Queue</documentation><input message="tns:queueRemoveInterfaceIn"/><output message="tns:queueRemoveInterfaceOut"/></operation><operation name="pauseQueueInterface"><documentation>Performs an agent pause on the interface</documentation><input message="tns:pauseQueueInterfaceIn"/><output message="tns:pauseQueueInterfaceOut"/></operation><operation name="unpauseQueueInterface"><documentation>Performs an agent un-pause on the interface</documentation><input message="tns:unpauseQueueInterfaceIn"/><output message="tns:unpauseQueueInterfaceOut"/></operation><operation name="getQueueStatus"><documentation>Retrieves the status from the Queues mechanism. It can retrieve either the status for all the Queues
or the status for a specific queue/queue member</documentation><input message="tns:getQueueStatusIn"/><output message="tns:getQueueStatusOut"/></operation><operation name="getQueueSummary"><documentation>Retrieves the Queue summary for a specific queue if one has been defined, or for the entire system</documentation><input message="tns:getQueueSummaryIn"/></operation><operation name="getAgents"><documentation>Lists agents and their status</documentation><input message="tns:getAgentsIn"/><output message="tns:getAgentsOut"/></operation><operation name="getQueueRule"><documentation>Get a queue rule</documentation><input message="tns:getQueueRuleIn"/><output message="tns:getQueueRuleOut"/></operation><operation name="setQueueMemberPenalty"><documentation>Sets the Queue Penalty for a member</documentation><input message="tns:setQueueMemberPenaltyIn"/><output message="tns:setQueueMemberPenaltyOut"/></operation><operation name="getQueues"><documentation>Get the queues from the remote asterisk server</documentation><input message="tns:getQueuesIn"/><output message="tns:getQueuesOut"/></operation><operation name="addQueueLog"><documentation>Allows you to write your own events into the queue log</documentation><input message="tns:addQueueLogIn"/><output message="tns:addQueueLogOut"/></operation><operation name="getSipPeer"><documentation>Get a SIP Peer from the remote asterisk as specified by $peer</documentation><input message="tns:getSipPeerIn"/><output message="tns:getSipPeerOut"/></operation><operation name="getSipPeers"><documentation>Retrieve the SIP Peers from the remote asterisk server</documentation><input message="tns:getSipPeersIn"/><output message="tns:getSipPeersOut"/></operation><operation name="playDTMF"><documentation>Plays a dtmf digit on the specified channel</documentation><input message="tns:playDTMFIn"/><output message="tns:playDTMFOut"/></operation><operation name="sentSIPNotify"><documentation>Sends a SIP Notify message to a peer</documentation><input message="tns:sentSIPNotifyIn"/><output message="tns:sentSIPNotifyOut"/></operation><operation name="getSipRegistry"><documentation>Retrieves the SIP Registry from the remote Asterisk server</documentation><input message="tns:getSipRegistryIn"/><output message="tns:getSipRegistryOut"/></operation><operation name="getVoicemailUsers"><documentation>List All Voicemail User Information</documentation><input message="tns:getVoicemailUsersIn"/><output message="tns:getVoicemailUsersOut"/></operation><operation name="getIAXPeers"><documentation>Retrieves the IAX Peers from the remote asterisk server</documentation><input message="tns:getIAXPeersIn"/><output message="tns:getIAXPeersOut"/></operation><operation name="getIAXPeerList"><documentation>Retrieves the IAX Peers from the remote asterisk server</documentation><input message="tns:getIAXPeerListIn"/><output message="tns:getIAXPeerListOut"/></operation><operation name="getIAXNetStats"><documentation>Retrieve the IAX Net stats</documentation><input message="tns:getIAXNetStatsIn"/><output message="tns:getIAXNetStatsOut"/></operation><operation name="unpauseMonitor"><documentation>Unpauses monitoring of a channel on which monitoring had previously been paused with PauseMonitor.</documentation><input message="tns:unpauseMonitorIn"/><output message="tns:unpauseMonitorOut"/></operation><operation name="pauseMonitor"><documentation>The 'PauseMonitor' action may be used to temporarily stop the recording of a channel</documentation><input message="tns:pauseMonitorIn"/><output message="tns:pauseMonitorOut"/></operation><operation name="changeMonitor"><documentation>Change monitoring filename of a channel. Has no effect if the channel is not monitored</documentation><input message="tns:changeMonitorIn"/><output message="tns:changeMonitorOut"/></operation><operation name="stopMonitor"><documentation>Stops monitoring a channel. Has no effect if the channel is not monitored</documentation><input message="tns:stopMonitorIn"/><output message="tns:stopMonitorOut"/></operation><operation name="monitor"><documentation>The 'Monitor' action may be used to record the audio on a specified channel.</documentation><input message="tns:monitorIn"/><output message="tns:monitorOut"/></operation><operation name="sendMessageToJabberChannel"><documentation>Send a message to a Jabber Channel</documentation><input message="tns:sendMessageToJabberChannelIn"/><output message="tns:sendMessageToJabberChannelOut"/></operation><operation name="AGI"><documentation>Add a new command to execute by the Async AGI application</documentation><input message="tns:AGIIn"/><output message="tns:AGIOut"/></operation><operation name="DBDelTree"><documentation>Removes database keytree/values</documentation><input message="tns:DBDelTreeIn"/><output message="tns:DBDelTreeOut"/></operation><operation name="DBDel"><documentation>Removes database key/value</documentation><input message="tns:DBDelIn"/><output message="tns:DBDelOut"/></operation><operation name="DBGet"><documentation>Gets a database value</documentation><input message="tns:DBGetIn"/><output message="tns:DBGetOut"/></operation><operation name="DBPut"><documentation>Adds / updates a database value</documentation><input message="tns:DBPutIn"/><output message="tns:DBPutOut"/></operation><operation name="bridge"><documentation>Bridge channels together</documentation><input message="tns:bridgeIn"/><output message="tns:bridgeOut"/></operation><operation name="park"><documentation>Park a channel</documentation><input message="tns:parkIn"/><output message="tns:parkOut"/></operation><operation name="getParkedCalls"><documentation>List parked calls</documentation><input message="tns:getParkedCallsIn"/><output message="tns:getParkedCallsOut"/></operation><operation name="getDialplan"><documentation>Show dialplan extensions</documentation><input message="tns:getDialplanIn"/><output message="tns:getDialplanOut"/></operation><operation name="isModuleLoaded"><documentation>Checks if Asterisk module is loaded</documentation><input message="tns:isModuleLoadedIn"/><output message="tns:isModuleLoadedOut"/></operation><operation name="loadModule"><documentation>Loads, unloads or reloads an Asterisk module in a running system.
If no module is specified for a reload loadtype, all modules are reloaded</documentation><input message="tns:loadModuleIn"/><output message="tns:loadModuleOut"/></operation><operation name="getActiveChannels"><documentation>List currently defined channels and some information about them.</documentation><input message="tns:getActiveChannelsIn"/><output message="tns:getActiveChannelsOut"/></operation><operation name="reload"><documentation>Send a reload event. Works the same as sending a ModuleLoad event (reload) without specifying
any modules</documentation><input message="tns:reloadIn"/><output message="tns:reloadOut"/></operation><operation name="getCoreStatusVariables"><documentation>Show PBX core status information</documentation><input message="tns:getCoreStatusVariablesIn"/><output message="tns:getCoreStatusVariablesOut"/></operation><operation name="getCoreSettings"><documentation>Show PBX core settings information</documentation><input message="tns:getCoreSettingsIn"/><output message="tns:getCoreSettingsOut"/></operation><operation name="sendUserEvent"><documentation>Send an event to manager sessions</documentation><input message="tns:sendUserEventIn"/><output message="tns:sendUserEventOut"/></operation><operation name="sendText"><documentation>Sends A Text Message while in a call</documentation><input message="tns:sendTextIn"/><output message="tns:sendTextOut"/></operation><operation name="listCommands"><documentation>Returns the action name and synopsis for every action that is available to the use</documentation><input message="tns:listCommandsIn"/><output message="tns:listCommandsOut"/></operation><operation name="getMailboxCount"><documentation>Checks a voicemail account for new messages.</documentation><input message="tns:getMailboxCountIn"/><output message="tns:getMailboxCountOut"/></operation><operation name="getMailboxStatus"><documentation>Checks a voicemail account for status</documentation><input message="tns:getMailboxStatusIn"/><output message="tns:getMailboxStatusOut"/></operation><operation name="setAbsoluteTimeout"><documentation>Hangup a channel after a certain time.</documentation><input message="tns:setAbsoluteTimeoutIn"/><output message="tns:setAbsoluteTimeoutOut"/></operation><operation name="getExtensionState"><documentation>Report the extension state for given extension. If the extension has a hint, will use devicestate to check
the status of the device connected to the extension.</documentation><input message="tns:getExtensionStateIn"/><output message="tns:getExtensionStateOut"/></operation><operation name="executeCommand"><documentation>Run a CLI command</documentation><input message="tns:executeCommandIn"/><output message="tns:executeCommandOut"/></operation><operation name="originate"><documentation>Generates an outgoing call to a Extension/Context/Priority or Application/Data</documentation><input message="tns:originateIn"/><output message="tns:originateOut"/></operation><operation name="attendedTransfer"><documentation>Attended transfer</documentation><input message="tns:attendedTransferIn"/><output message="tns:attendedTransferOut"/></operation><operation name="transfer"><documentation>Synonymous for redirect().</documentation><input message="tns:transferIn"/></operation><operation name="redirect"><documentation>Redirect (transfer) a call</documentation><input message="tns:redirectIn"/><output message="tns:redirectOut"/></operation><operation name="listCategories"><documentation>A 'ListCategories' action will dump the categories in a given file.</documentation><input message="tns:listCategoriesIn"/><output message="tns:listCategoriesOut"/></operation><operation name="createConfigurationFile"><documentation>A 'CreateConfig' action will create an empty file in the configuration directory.
This action is intended to be used before an UpdateConfig action.</documentation><input message="tns:createConfigurationFileIn"/><output message="tns:createConfigurationFileOut"/></operation><operation name="getStatus"><documentation>Lists channel status along with requested channel vars</documentation><input message="tns:getStatusIn"/><output message="tns:getStatusOut"/></operation><operation name="getConfigJson"><documentation>A 'GetConfigJSON' action will dump the contents of a configuration file by category and contents in JSON format.
This only makes sense to be used using rawman over the HTTP interface.</documentation><input message="tns:getConfigJsonIn"/><output message="tns:getConfigJsonOut"/></operation><operation name="getConfig"><documentation>A 'GetConfig' action will dump the contents of a configuration file by category and contents or optionally by specified category only</documentation><input message="tns:getConfigIn"/><output message="tns:getConfigOut"/></operation><operation name="getChannelVariable"><documentation>Get the value of a global or local channel variable</documentation><input message="tns:getChannelVariableIn"/><output message="tns:getChannelVariableOut"/></operation><operation name="setChannelVariable"><documentation>Get the value of a global or local channel variable</documentation><input message="tns:setChannelVariableIn"/><output message="tns:setChannelVariableOut"/></operation><operation name="hangup"><documentation>Hangup a channel</documentation><input message="tns:hangupIn"/><output message="tns:hangupOut"/></operation><operation name="challenge"><documentation>Generate Challenge for MD5 Auth</documentation><input message="tns:challengeIn"/><output message="tns:challengeOut"/></operation><operation name="events"><documentation>Enable/Disable sending of events to this manager client.</documentation><input message="tns:eventsIn"/><output message="tns:eventsOut"/></operation><operation name="login"><documentation>Logins to the remote asterisk server
All arguments are optional and can be defined per instance on the class instanciation</documentation><input message="tns:loginIn"/><output message="tns:loginOut"/></operation><operation name="logoff"><documentation>Logs off from the remote asterisk server</documentation><input message="tns:logoffIn"/><output message="tns:logoffOut"/></operation><operation name="ping"><documentation>Pings the remote asterisk server. Keeps the remote connection alive</documentation><input message="tns:pingIn"/><output message="tns:pingOut"/></operation><operation name="waitEvent"><documentation>Send a WaitEvent command to remote asterisk and wait for any incoming events</documentation><input message="tns:waitEventIn"/><output message="tns:waitEventOut"/></operation><operation name="processEvents"><documentation>Handles the processing of the return events by the asterisk server creating PHP objects for each one of them</documentation><input message="tns:processEventsIn"/><output message="tns:processEventsOut"/></operation><operation name="getCookie"><documentation>Retrieves the asterisk cookie. 
This can be used to set the cookie value to a PHP session so as to establish a permanent connection between a web application and the 
Asterisk AJAM interface. Don't forget to close the session since php sessions are locking</documentation><input message="tns:getCookieIn"/><output message="tns:getCookieOut"/></operation><operation name="setCookie"><documentation>Sets the cookie to be used for the connection with the remote asterisk server.</documentation><input message="tns:setCookieIn"/></operation></portType><binding name="Shift8Binding" type="tns:Shift8Port"><soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/><operation name="addEventListener"><soap:operation soapAction="http://10.1.1.144/soap/#addEventListener"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="removeEventListener"><soap:operation soapAction="http://10.1.1.144/soap/#removeEventListener"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="addDebugListener"><soap:operation soapAction="http://10.1.1.144/soap/#addDebugListener"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="removeDebugListener"><soap:operation soapAction="http://10.1.1.144/soap/#removeDebugListener"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="addCommandToQueue"><soap:operation soapAction="http://10.1.1.144/soap/#addCommandToQueue"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="processCommandQueue"><soap:operation soapAction="http://10.1.1.144/soap/#processCommandQueue"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getQueuedCommandResponse"><soap:operation soapAction="http://10.1.1.144/soap/#getQueuedCommandResponse"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="setQueueProcessor"><soap:operation soapAction="http://10.1.1.144/soap/#setQueueProcessor"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getQueueProcessor"><soap:operation soapAction="http://10.1.1.144/soap/#getQueueProcessor"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="disallowCommandToBeQueued"><soap:operation soapAction="http://10.1.1.144/soap/#disallowCommandToBeQueued"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="allowCommandToBeQueued"><soap:operation soapAction="http://10.1.1.144/soap/#allowCommandToBeQueued"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="queueAddInterface"><soap:operation soapAction="http://10.1.1.144/soap/#queueAddInterface"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="queueRemoveInterface"><soap:operation soapAction="http://10.1.1.144/soap/#queueRemoveInterface"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="pauseQueueInterface"><soap:operation soapAction="http://10.1.1.144/soap/#pauseQueueInterface"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="unpauseQueueInterface"><soap:operation soapAction="http://10.1.1.144/soap/#unpauseQueueInterface"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getQueueStatus"><soap:operation soapAction="http://10.1.1.144/soap/#getQueueStatus"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getQueueSummary"><soap:operation soapAction="http://10.1.1.144/soap/#getQueueSummary"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getAgents"><soap:operation soapAction="http://10.1.1.144/soap/#getAgents"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getQueueRule"><soap:operation soapAction="http://10.1.1.144/soap/#getQueueRule"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="setQueueMemberPenalty"><soap:operation soapAction="http://10.1.1.144/soap/#setQueueMemberPenalty"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getQueues"><soap:operation soapAction="http://10.1.1.144/soap/#getQueues"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="addQueueLog"><soap:operation soapAction="http://10.1.1.144/soap/#addQueueLog"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getSipPeer"><soap:operation soapAction="http://10.1.1.144/soap/#getSipPeer"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getSipPeers"><soap:operation soapAction="http://10.1.1.144/soap/#getSipPeers"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="playDTMF"><soap:operation soapAction="http://10.1.1.144/soap/#playDTMF"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="sentSIPNotify"><soap:operation soapAction="http://10.1.1.144/soap/#sentSIPNotify"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getSipRegistry"><soap:operation soapAction="http://10.1.1.144/soap/#getSipRegistry"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getVoicemailUsers"><soap:operation soapAction="http://10.1.1.144/soap/#getVoicemailUsers"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getIAXPeers"><soap:operation soapAction="http://10.1.1.144/soap/#getIAXPeers"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getIAXPeerList"><soap:operation soapAction="http://10.1.1.144/soap/#getIAXPeerList"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getIAXNetStats"><soap:operation soapAction="http://10.1.1.144/soap/#getIAXNetStats"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="unpauseMonitor"><soap:operation soapAction="http://10.1.1.144/soap/#unpauseMonitor"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="pauseMonitor"><soap:operation soapAction="http://10.1.1.144/soap/#pauseMonitor"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="changeMonitor"><soap:operation soapAction="http://10.1.1.144/soap/#changeMonitor"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="stopMonitor"><soap:operation soapAction="http://10.1.1.144/soap/#stopMonitor"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="monitor"><soap:operation soapAction="http://10.1.1.144/soap/#monitor"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="sendMessageToJabberChannel"><soap:operation soapAction="http://10.1.1.144/soap/#sendMessageToJabberChannel"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="AGI"><soap:operation soapAction="http://10.1.1.144/soap/#AGI"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="DBDelTree"><soap:operation soapAction="http://10.1.1.144/soap/#DBDelTree"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="DBDel"><soap:operation soapAction="http://10.1.1.144/soap/#DBDel"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="DBGet"><soap:operation soapAction="http://10.1.1.144/soap/#DBGet"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="DBPut"><soap:operation soapAction="http://10.1.1.144/soap/#DBPut"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="bridge"><soap:operation soapAction="http://10.1.1.144/soap/#bridge"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="park"><soap:operation soapAction="http://10.1.1.144/soap/#park"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getParkedCalls"><soap:operation soapAction="http://10.1.1.144/soap/#getParkedCalls"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getDialplan"><soap:operation soapAction="http://10.1.1.144/soap/#getDialplan"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="isModuleLoaded"><soap:operation soapAction="http://10.1.1.144/soap/#isModuleLoaded"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="loadModule"><soap:operation soapAction="http://10.1.1.144/soap/#loadModule"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getActiveChannels"><soap:operation soapAction="http://10.1.1.144/soap/#getActiveChannels"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="reload"><soap:operation soapAction="http://10.1.1.144/soap/#reload"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getCoreStatusVariables"><soap:operation soapAction="http://10.1.1.144/soap/#getCoreStatusVariables"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getCoreSettings"><soap:operation soapAction="http://10.1.1.144/soap/#getCoreSettings"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="sendUserEvent"><soap:operation soapAction="http://10.1.1.144/soap/#sendUserEvent"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="sendText"><soap:operation soapAction="http://10.1.1.144/soap/#sendText"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="listCommands"><soap:operation soapAction="http://10.1.1.144/soap/#listCommands"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getMailboxCount"><soap:operation soapAction="http://10.1.1.144/soap/#getMailboxCount"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getMailboxStatus"><soap:operation soapAction="http://10.1.1.144/soap/#getMailboxStatus"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="setAbsoluteTimeout"><soap:operation soapAction="http://10.1.1.144/soap/#setAbsoluteTimeout"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getExtensionState"><soap:operation soapAction="http://10.1.1.144/soap/#getExtensionState"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="executeCommand"><soap:operation soapAction="http://10.1.1.144/soap/#executeCommand"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="originate"><soap:operation soapAction="http://10.1.1.144/soap/#originate"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="attendedTransfer"><soap:operation soapAction="http://10.1.1.144/soap/#attendedTransfer"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="transfer"><soap:operation soapAction="http://10.1.1.144/soap/#transfer"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="redirect"><soap:operation soapAction="http://10.1.1.144/soap/#redirect"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="listCategories"><soap:operation soapAction="http://10.1.1.144/soap/#listCategories"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="createConfigurationFile"><soap:operation soapAction="http://10.1.1.144/soap/#createConfigurationFile"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getStatus"><soap:operation soapAction="http://10.1.1.144/soap/#getStatus"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getConfigJson"><soap:operation soapAction="http://10.1.1.144/soap/#getConfigJson"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getConfig"><soap:operation soapAction="http://10.1.1.144/soap/#getConfig"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getChannelVariable"><soap:operation soapAction="http://10.1.1.144/soap/#getChannelVariable"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="setChannelVariable"><soap:operation soapAction="http://10.1.1.144/soap/#setChannelVariable"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="hangup"><soap:operation soapAction="http://10.1.1.144/soap/#hangup"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="challenge"><soap:operation soapAction="http://10.1.1.144/soap/#challenge"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="events"><soap:operation soapAction="http://10.1.1.144/soap/#events"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="login"><soap:operation soapAction="http://10.1.1.144/soap/#login"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="logoff"><soap:operation soapAction="http://10.1.1.144/soap/#logoff"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="ping"><soap:operation soapAction="http://10.1.1.144/soap/#ping"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="waitEvent"><soap:operation soapAction="http://10.1.1.144/soap/#waitEvent"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="processEvents"><soap:operation soapAction="http://10.1.1.144/soap/#processEvents"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="getCookie"><soap:operation soapAction="http://10.1.1.144/soap/#getCookie"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation><operation name="setCookie"><soap:operation soapAction="http://10.1.1.144/soap/#setCookie"/><input><soap:body use="literal" namespace="http://10.1.1.144"/></input><output><soap:body use="literal" namespace="http://10.1.1.144"/></output></operation></binding><service name="Shift8Service"><port name="Shift8Port" binding="tns:Shift8Binding"><soap:address location="http://10.1.1.144/soap/"/></port></service><message name="addEventListenerIn"><part name="name" type="xsd:string"/><part name="listener" type="tns:Shift8_Event_Listener"/><part name="filter" type="tns:Shift8_Event_Filter"/></message><message name="addEventListenerOut"><part name="return" type="xsd:boolean"/></message><message name="removeEventListenerIn"><part name="name" type="xsd:string"/></message><message name="removeEventListenerOut"><part name="return" type="xsd:boolean"/></message><message name="addDebugListenerIn"><part name="name" type="xsd:string"/><part name="listener" type="tns:Shift8_Debug_Listener"/></message><message name="addDebugListenerOut"><part name="return" type="xsd:boolean"/></message><message name="removeDebugListenerIn"><part name="name" type="xsd:string"/></message><message name="removeDebugListenerOut"><part name="return" type="xsd:boolean"/></message><message name="addCommandToQueueIn"><part name="command" type="xsd:string"/><part name="arguments" type="soap-enc:Array"/></message><message name="addCommandToQueueOut"><part name="return" type="xsd:int"/></message><message name="processCommandQueueIn"/><message name="processCommandQueueOut"><part name="return" type="xsd:boolean"/></message><message name="getQueuedCommandResponseIn"><part name="queue_id" type="xsd:int"/></message><message name="getQueuedCommandResponseOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="setQueueProcessorIn"><part name="processor" type="tns:Shift8_Queue_Processor"/></message><message name="getQueueProcessorIn"/><message name="getQueueProcessorOut"><part name="return" type="tns:Shift8_Queue_Processor"/></message><message name="disallowCommandToBeQueuedIn"><part name="command" type="xsd:string"/></message><message name="disallowCommandToBeQueuedOut"><part name="return" type="xsd:boolean"/></message><message name="allowCommandToBeQueuedIn"><part name="command" type="xsd:string"/></message><message name="allowCommandToBeQueuedOut"><part name="return" type="xsd:boolean"/></message><message name="queueAddInterfaceIn"><part name="queue" type="xsd:string"/><part name="interface" type="xsd:string"/></message><message name="queueAddInterfaceOut"><part name="return" type="xsd:boolean"/></message><message name="queueRemoveInterfaceIn"><part name="queue" type="xsd:string"/><part name="interface" type="xsd:string"/></message><message name="queueRemoveInterfaceOut"><part name="return" type="xsd:boolean"/></message><message name="pauseQueueInterfaceIn"><part name="interface" type="xsd:string"/></message><message name="pauseQueueInterfaceOut"><part name="return" type="xsd:boolean"/></message><message name="unpauseQueueInterfaceIn"><part name="interface" type="xsd:string"/></message><message name="unpauseQueueInterfaceOut"><part name="return" type="xsd:boolean"/></message><message name="getQueueStatusIn"><part name="queue" type="xsd:string"/><part name="member" type="xsd:string"/></message><message name="getQueueStatusOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getQueueSummaryIn"><part name="queue" type="xsd:string"/></message><message name="getAgentsIn"/><message name="getAgentsOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getQueueRuleIn"><part name="rule" type="xsd:string"/></message><message name="getQueueRuleOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="setQueueMemberPenaltyIn"><part name="member" type="xsd:string"/><part name="queue" type="xsd:string"/><part name="penalty" type="xsd:int"/></message><message name="setQueueMemberPenaltyOut"><part name="return" type="xsd:boolean"/></message><message name="getQueuesIn"/><message name="getQueuesOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="addQueueLogIn"><part name="queue" type="xsd:string"/><part name="unique_id" type="xsd:int"/><part name="interface" type="xsd:string"/><part name="event" type="xsd:string"/><part name="message" type="xsd:string"/></message><message name="addQueueLogOut"><part name="return" type="xsd:boolean"/></message><message name="getSipPeerIn"><part name="peer" type="xsd:string"/></message><message name="getSipPeerOut"><part name="return" type="tns:Shift8_Event"/></message><message name="getSipPeersIn"/><message name="getSipPeersOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="playDTMFIn"><part name="dtmf" type="xsd:string"/><part name="channel" type="xsd:string"/></message><message name="playDTMFOut"><part name="return" type="xsd:boolean"/></message><message name="sentSIPNotifyIn"><part name="channel" type="xsd:string"/></message><message name="sentSIPNotifyOut"><part name="return" type="xsd:boolean"/></message><message name="getSipRegistryIn"/><message name="getSipRegistryOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getVoicemailUsersIn"/><message name="getVoicemailUsersOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getIAXPeersIn"/><message name="getIAXPeersOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getIAXPeerListIn"/><message name="getIAXPeerListOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getIAXNetStatsIn"/><message name="getIAXNetStatsOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="unpauseMonitorIn"><part name="channel" type="xsd:string"/></message><message name="unpauseMonitorOut"><part name="return" type="xsd:boolean"/></message><message name="pauseMonitorIn"><part name="channel" type="xsd:string"/></message><message name="pauseMonitorOut"><part name="return" type="xsd:boolean"/></message><message name="changeMonitorIn"><part name="channel" type="xsd:string"/><part name="file" type="xsd:string"/></message><message name="changeMonitorOut"><part name="return" type="xsd:boolean"/></message><message name="stopMonitorIn"><part name="channel" type="xsd:string"/></message><message name="stopMonitorOut"><part name="return" type="xsd:boolean"/></message><message name="monitorIn"><part name="channel" type="xsd:string"/><part name="file" type="xsd:string"/><part name="format" type="xsd:string"/><part name="mix" type="xsd:boolean"/></message><message name="monitorOut"><part name="return" type="xsd:boolean"/></message><message name="sendMessageToJabberChannelIn"><part name="jabber" type="xsd:string"/><part name="screenName" type="xsd:string"/><part name="message" type="xsd:string"/></message><message name="sendMessageToJabberChannelOut"><part name="return" type="xsd:boolean"/></message><message name="AGIIn"><part name="channel" type="xsd:string"/><part name="command" type="xsd:string"/><part name="command_id" type="xsd:string"/></message><message name="AGIOut"><part name="return" type="xsd:boolean"/></message><message name="DBDelTreeIn"><part name="family" type="xsd:string"/><part name="key" type="xsd:string"/></message><message name="DBDelTreeOut"><part name="return" type="xsd:boolean"/></message><message name="DBDelIn"><part name="family" type="xsd:string"/><part name="key" type="xsd:string"/></message><message name="DBDelOut"><part name="return" type="xsd:boolean"/></message><message name="DBGetIn"><part name="family" type="xsd:string"/><part name="key" type="xsd:string"/></message><message name="DBGetOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="DBPutIn"><part name="family" type="xsd:string"/><part name="key" type="xsd:string"/><part name="value" type="xsd:string"/></message><message name="DBPutOut"><part name="return" type="xsd:boolean"/></message><message name="bridgeIn"><part name="channelA" type="xsd:string"/><part name="channelB" type="xsd:string"/><part name="tone" type="xsd:string"/></message><message name="bridgeOut"><part name="return" type="xsd:boolean"/></message><message name="parkIn"><part name="channelA" type="xsd:string"/><part name="channelB" type="xsd:string"/><part name="timeout" type="xsd:int"/></message><message name="parkOut"><part name="return" type="xsd:boolean"/></message><message name="getParkedCallsIn"/><message name="getParkedCallsOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getDialplanIn"/><message name="getDialplanOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="isModuleLoadedIn"><part name="module" type="xsd:string"/></message><message name="isModuleLoadedOut"><part name="return" type="xsd:boolean"/></message><message name="loadModuleIn"><part name="module" type="xsd:boolean"/><part name="loadType" type="xsd:string"/></message><message name="loadModuleOut"><part name="return" type="xsd:boolean"/></message><message name="getActiveChannelsIn"/><message name="getActiveChannelsOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="reloadIn"/><message name="reloadOut"><part name="return" type="xsd:boolean"/></message><message name="getCoreStatusVariablesIn"/><message name="getCoreStatusVariablesOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getCoreSettingsIn"/><message name="getCoreSettingsOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="sendUserEventIn"><part name="userEvent" type="xsd:string"/></message><message name="sendUserEventOut"><part name="return" type="xsd:boolean"/></message><message name="sendTextIn"><part name="channel" type="xsd:string"/><part name="message" type="xsd:string"/></message><message name="sendTextOut"><part name="return" type="xsd:boolean"/></message><message name="listCommandsIn"/><message name="listCommandsOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getMailboxCountIn"><part name="mailbox" type="xsd:string"/></message><message name="getMailboxCountOut"><part name="return" type="xsd:int"/></message><message name="getMailboxStatusIn"><part name="mailbox" type="xsd:string"/></message><message name="getMailboxStatusOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="setAbsoluteTimeoutIn"><part name="channel" type="xsd:string"/><part name="timeout" type="xsd:int"/></message><message name="setAbsoluteTimeoutOut"><part name="return" type="xsd:boolean"/></message><message name="getExtensionStateIn"><part name="exten" type="xsd:string"/><part name="context" type="xsd:string"/></message><message name="getExtensionStateOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="executeCommandIn"><part name="command" type="xsd:string"/></message><message name="executeCommandOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="originateIn"><part name="channel" type="xsd:string"/><part name="exten" type="xsd:string"/><part name="context" type="xsd:string"/><part name="priority" type="xsd:string"/><part name="application" type="xsd:string"/><part name="data" type="xsd:string"/><part name="timeout" type="xsd:string"/><part name="callerID" type="xsd:string"/><part name="variable" type="xsd:string"/><part name="account" type="xsd:string"/><part name="async" type="xsd:string"/><part name="codecs" type="xsd:string"/></message><message name="originateOut"><part name="return" type="xsd:boolean"/></message><message name="attendedTransferIn"><part name="channel" type="xsd:string"/><part name="exten" type="xsd:string"/><part name="context" type="xsd:string"/><part name="priority" type="xsd:int"/></message><message name="attendedTransferOut"><part name="return" type="xsd:boolean"/></message><message name="transferIn"><part name="channel" type="xsd:anyType"/><part name="extraChannel" type="xsd:anyType"/><part name="exten" type="xsd:anyType"/><part name="context" type="xsd:anyType"/><part name="priority" type="xsd:anyType"/></message><message name="redirectIn"><part name="channel" type="xsd:string"/><part name="extraChannel" type="xsd:string"/><part name="exten" type="xsd:string"/><part name="context" type="xsd:string"/><part name="priority" type="xsd:int"/></message><message name="redirectOut"><part name="return" type="xsd:boolean"/></message><message name="listCategoriesIn"><part name="filename" type="xsd:string"/></message><message name="listCategoriesOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="createConfigurationFileIn"><part name="filename" type="xsd:string"/></message><message name="createConfigurationFileOut"><part name="return" type="xsd:boolean"/></message><message name="getStatusIn"><part name="channel" type="xsd:string"/><part name="variables" type="xsd:string"/></message><message name="getStatusOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getConfigJsonIn"><part name="filename" type="xsd:string"/></message><message name="getConfigJsonOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getConfigIn"><part name="filename" type="xsd:string"/><part name="category" type="xsd:string"/></message><message name="getConfigOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getChannelVariableIn"><part name="variable" type="xsd:string"/><part name="channel" type="xsd:string"/></message><message name="getChannelVariableOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="setChannelVariableIn"><part name="variable" type="xsd:string"/><part name="value" type="xsd:string"/><part name="channel" type="xsd:string"/></message><message name="setChannelVariableOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="hangupIn"><part name="channel" type="xsd:string"/></message><message name="hangupOut"><part name="return" type="xsd:boolean"/></message><message name="challengeIn"/><message name="challengeOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="eventsIn"><part name="eventMask" type="xsd:string"/></message><message name="eventsOut"><part name="return" type="xsd:boolean"/></message><message name="loginIn"><part name="ajam" type="xsd:string"/><part name="manager" type="xsd:string"/><part name="secret" type="xsd:string"/></message><message name="loginOut"><part name="return" type="xsd:boolean"/></message><message name="logoffIn"/><message name="logoffOut"><part name="return" type="xsd:boolean"/></message><message name="pingIn"/><message name="pingOut"><part name="return" type="xsd:boolean"/></message><message name="waitEventIn"/><message name="waitEventOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="processEventsIn"><part name="events" type="tns:SimpleXMLElement"/></message><message name="processEventsOut"><part name="return" type="tns:ArrayOfShift8_event"/></message><message name="getCookieIn"/><message name="getCookieOut"><part name="return" type="xsd:string"/></message><message name="setCookieIn"><part name="cookie" type="xsd:string"/></message></definitions>